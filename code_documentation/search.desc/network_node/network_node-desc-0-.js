searchState.loadedDescShard("network_node", 0, "Common utilities and traits for the dr_ones network …\nCommon network functionality shared across different node …\nAdds a communication channel for a neighbouring node.\nAdds a communication channel for a neighbouring node.\nBroadcasts a packet to all neighbouring nodes except the …\nBroadcasts a packet to all neighbouring nodes except the …\nConstructs an acknowledgement (Ack) packet corresponding …\nConstructs an acknowledgement (Ack) packet corresponding …\nBuilds a flood response packet from a flood request packet …\nBuilds a flood response packet from a flood request packet …\nConstructs a negative acknowledgement (Nack) packet in …\nConstructs a negative acknowledgement (Nack) packet in …\nReturns the default variant of <code>SerializableMessage</code>, which …\nForwards a packet to the next hop specified in the routing …\nForwards a packet to the next hop specified in the routing …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIndicates whether the node is set to exhibit crashing …\nIndicates whether the node is set to exhibit crashing …\nRetrieves the unique identifier of this network node.\nReturns a reference to the channel used for receiving …\nReturns a mutable reference to the mapping of node IDs to …\nReturns a mutable reference to the node’s random number …\nProvides a mutable reference to the set of flood request …\nReturns a reference to the simulation controller’s …\nHandles an incoming command directed to this node.\nProcesses a flood request packet.\nProcesses a flood request packet.\nDetermines how to process an incoming packet based on its …\nDetermines how to process an incoming packet based on its …\nProcesses a routed packet arriving at this node.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLogs an error message.\nLogs a status message.\nRemoves the communication channel associated with a …\nRemoves the communication channel associated with a …\nReverses the routing direction of the provided packet.\nReverses the routing direction of the provided packet.\nDisables logging to stdout.\nEnables logging to stdout and resets any log file …\nChecks if a log file is currently configured for logging.\nReturns whether logging to stdout is enabled.\nRedirects log output to a file.\nWrites a log message to the log file if available.")