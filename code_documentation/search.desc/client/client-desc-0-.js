searchState.loadedDescShard("client", 0, "Client implementation for the dr_ones network simulator.\nIndicates that this node is a client.\nReturns the argument unchanged.\nReturns the node ID of the client.\nReturns a clone of the map containing NACK fragments for …\nReturns a reference to the packet receiver.\nReturns a mutable reference to the map of packet senders.\nRetrieves the Packet Delivery Ratio (PDR) estimation for a …\nReturns a clone of the map containing pending fragments.\nReturns a clone of the list of pending serializable …\nReturns a mutable reference to the client’s random …\nReturns a mutable reference to the set of flood IDs seen …\nReturns a reference to the simulation controller sender.\nRetrieves the packet fragments for a single session.\nRetrieves the client’s current topology configuration.\nHandles a chat message from another client by logging the …\nHandles a client list response by logging the list and …\nHandles an incoming command by matching its type and …\nHandles an error message from a server by logging it.\nHandles a file list response from a server by logging the …\nHandles a file response from a server by logging the …\nHandles successful registration to a communication server …\nHandles a routed packet by delegating to the host-specific …\nHandles a server type response by logging the response and …\nCalls <code>U::from(self)</code>.\nCreates a new <code>Client</code> instance with the provided parameters …\nRemoves the packet fragments for a given session ID.\nRuns the client’s main loop. It initializes the topology …\nSets the NACK fragments mapping for error in routing.\nSets the PDR estimation for a given node.\nSets the pending fragments with the provided mapping.\nSets the list of pending serializable messages.\nSets the packet fragments for a given session ID.\nSets the client’s topology configuration.")