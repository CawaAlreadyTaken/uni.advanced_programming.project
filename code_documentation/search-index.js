var searchIndex = new Map(JSON.parse('[["client",{"t":"FNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNN","n":["Client","am_i_client","borrow","borrow_mut","fmt","from","get_id","get_nack_for_error_in_routing_fragments","get_packet_receiver","get_packet_send","get_pdr_estimation_for_node","get_pending_fragments","get_pending_serializable_messages","get_random_generator","get_seen_flood_ids","get_sim_contr_send","get_single_session_fragments","get_topology","handle_chat","handle_client_list_response","handle_command","handle_error_message","handle_file_list_response","handle_file_response","handle_register_success","handle_routed_packet","handle_server_type_response","into","new","remove_session_fragments","run","set_nack_for_error_in_routing_fragments","set_pdr_estimation_for_node","set_pending_fragments","set_pending_serializable_messages","set_single_session_fragments","set_topology","topology","try_from","try_into","type_id","vzip"],"q":[[0,"client"],[42,"client::client"],[43,"core::fmt"],[44,"wg_network::routing"],[45,"wg_packet::packet"],[46,"std::collections::hash::map"],[47,"crossbeam_channel::channel"],[48,"network_node::network_node"],[49,"alloc::vec"],[50,"rand::rngs::std"],[51,"alloc::string"],[52,"std::collections::hash::set"],[53,"wg_controller::command"],[54,"wg_config::config"],[55,"core::option"],[56,"core::result"],[57,"core::any"]],"i":"`b0000000000000000000000000000000000000000","f":"`{{{d{b}}}f}{d{{d{c}}}{}}{{{d{h}}}{{d{hc}}}{}}{{{d{b}}{d{hj}}}l}{cc{}}{{{d{b}}}n}{{{d{b}}}{{Af{{Ab{A`A`n}}Ad}}}}{{{d{b}}}{{d{{Aj{Ah}}}}}}{{{d{hb}}}{{d{h{Af{n{Al{Ah}}}}}}}}{{{d{b}}n}{{Ab{AnAn}}}}3{{{d{b}}}{{Bb{{Ab{nB`}}}}}}{{{d{hb}}}{{d{hBd}}}}{{{d{hb}}}{{d{h{Bh{Bf}}}}}}{{{d{b}}}{{d{{Al{Bj}}}}}}{{{d{b}}A`}{{d{{Bb{Ah}}}}}}{{{d{b}}}{{Bn{Bl}}}}{{{d{hb}}nnnBf}C`}{{{d{hb}}n{Bb{n}}}C`}{{{d{hb}}Cb}C`}{{{d{hb}}nBf}C`}{{{d{hb}}n{Bb{Bf}}}C`}{{{d{hb}}nBfBf}C`}{{{d{hb}}n}C`}{{{d{hb}}Ah}f}{{{d{hb}}nCd}C`}{{}c{}}{{n{Al{Bj}}{Aj{Cf}}{Aj{Ah}}{Af{n{Al{Ah}}}}{Al{Cf}}}b}{{{d{hb}}A`}C`}{{{d{hb}}}C`}{{{d{hb}}{Af{{Ab{A`A`n}}Ad}}}C`}{{{d{hb}}n{Ab{AnAn}}}C`}1{{{d{hb}}{Bb{{Ab{nB`}}}}}C`}{{{d{hb}}A`{Bb{Ah}}}C`}{{{d{hb}}Bl}C`}`{c{{Ch{e}}}{}{}}{{}{{Ch{c}}}{}}{dCj}{{}c{}}","D":"Dd","p":[[5,"Client",0,42],[1,"reference",null,null,1],[1,"bool"],[0,"mut"],[5,"Formatter",43],[8,"Result",43],[8,"NodeId",44],[1,"u64"],[1,"tuple",null,null,1],[5,"Fragment",45],[5,"HashMap",46],[5,"Packet",45],[5,"Receiver",47],[5,"Sender",47],[1,"i32"],[6,"SerializableMessage",48],[5,"Vec",49],[5,"StdRng",50],[5,"String",51],[5,"HashSet",52],[6,"DroneEvent",53],[5,"Config",54],[6,"Option",55,null,1],[1,"unit"],[6,"Command",48],[6,"ServerType",48],[6,"ClientCommand",48],[6,"Result",56,null,1],[5,"TypeId",57]],"r":[[0,42]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAgAAwABAAAAAwACACYABAA=","P":[[2,"T"],[4,""],[5,"T"],[6,""],[27,"U"],[28,""],[38,"U,T"],[39,"U"],[40,""],[41,"V"]]}],["dr_ones",{"t":"FNNHHNNNNNNNNNNNNHNNNNN","n":["Drone","borrow","borrow_mut","disable_logging","enable_logging","from","get_crashing_behavior","get_id","get_packet_receiver","get_packet_send","get_random_generator","get_seen_flood_ids","get_sim_contr_send","handle_command","handle_routed_packet","into","new","redirect_logs_to_file","run","try_from","try_into","type_id","vzip"],"q":[[0,"dr_ones"],[23,"dr_ones::drone"],[24,"wg_network::routing"],[25,"wg_packet::packet"],[26,"crossbeam_channel::channel"],[27,"std::collections::hash::map"],[28,"rand::rngs::std"],[29,"alloc::string"],[30,"std::collections::hash::set"],[31,"wg_controller::command"],[32,"network_node::network_node"],[33,"core::result"],[34,"core::any"],[35,"network_node::logging"]],"i":"`h0``000000000000`00000","f":"`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{}f}0{cc{}}{{{b{h}}}j}{{{b{h}}}l}{{{b{h}}}{{b{{A`{n}}}}}}{{{b{dh}}}{{b{d{Ad{l{Ab{n}}}}}}}}{{{b{dh}}}{{b{dAf}}}}{{{b{dh}}}{{b{d{Aj{Ah}}}}}}{{{b{h}}}{{b{{Ab{Al}}}}}}{{{b{dh}}An}f}{{{b{dh}}n}j}{{}c{}}{{l{Ab{Al}}{A`{B`}}{A`{n}}{Ad{l{Ab{n}}}}Bb}h}<{{{b{dh}}}f}{c{{Bd{e}}}{}{}}{{}{{Bd{c}}}{}}{bBf}{{}c{}}","D":"Bd","p":[[1,"reference",null,null,1],[0,"mut"],[1,"unit"],[5,"Drone",0,23],[1,"bool"],[8,"NodeId",24],[5,"Packet",25],[5,"Receiver",26],[5,"Sender",26],[5,"HashMap",27],[5,"StdRng",28],[5,"String",29],[5,"HashSet",30],[6,"DroneEvent",31],[6,"Command",32],[6,"DroneCommand",31],[1,"f32"],[6,"Result",33,null,1],[5,"TypeId",34]],"r":[[0,23],[3,35],[4,35],[17,35]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAUAAgACAAEAFAADAA==","P":[[1,"T"],[3,""],[5,"T"],[6,""],[15,"U"],[16,""],[19,"U,T"],[20,"U"],[21,""],[22,"V"]]}],["host_node",{"t":"KNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNMMNNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMMMMMMMNN","n":["HostNode","add_nack_for_error_in_routing_fragment","","add_pending_fragment","","add_pending_serializable_message","","am_i_client","assembler_assemble_message","","assembler_create_graph","","assembler_create_routing_header_bfs","","assembler_fragment_message","","assembler_get_packets","","assembler_serialize_message","","build_and_forward_serializable_packets","","check_and_send_nack_for_error_in_routing_fragments","","check_and_send_pending_serializable_messages","","delete_nack_for_error_in_routing_fragment","","delete_pending_fragment","","delete_pending_serializable_message","","destination_is_reachable","","get_nack_for_error_in_routing_fragments","get_pdr_estimation_for_node","get_pending_fragment_recipient","","get_pending_fragments","get_pending_serializable_messages","get_single_pending_fragment","","get_single_session_fragments","get_topology","get_topology_print_string","","handle_ack","","handle_chat","","handle_client_list_request","","handle_client_list_response","","handle_error_message","","handle_file_list_request","","handle_file_list_response","","handle_file_request","","handle_file_response","","handle_flood_response","","handle_message","","handle_message_fragment","","handle_nack","","handle_register_success","","handle_register_to_communication_server","","handle_server_type_request","","handle_server_type_response","","host_handle_routed_packet","","initialize_topology","","initiate_flood_request","","pdr_ack_estimation_update","","pdr_nack_estimation_update","","remove_session_fragments","reset_topology","","run","set_nack_for_error_in_routing_fragments","set_pdr_estimation_for_node","set_pending_fragments","set_pending_serializable_messages","set_single_session_fragments","set_topology","update_topology",""],"q":[[0,"host_node"],[102,"host_node::host_node"],[103,"wg_packet::packet"],[104,"wg_network::routing"],[105,"network_node::network_node"],[106,"alloc::vec"],[107,"wg_config::config"],[108,"std::collections::hash::map"],[109,"core::option"],[110,"alloc::string"]],"i":"`d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","f":"`{{{f{bd}}hjl}n}000{{{f{bd}}lA`}n}0{{{f{d}}}Ab}{{{f{d}}{Af{Ad}}}A`}0{{{f{d}}{f{Ah}}}{{Aj{l{Af{l}}}}}}0{{{f{d}}l{f{Ah}}}{{An{Al}}}}0{{{f{d}}{f{{Bb{B`}}}}}{{Af{j}}}}0{{{f{bd}}lAhA`}{{Af{Ad}}}}0{{{f{d}}A`}{{Af{B`}}}}077{{{f{bd}}}n}000{{{f{bd}}hh}n}000{{{f{bd}}l}n}0{{{f{d}}l{f{Ah}}}Ab}0{{{f{d}}}{{Aj{{Bd{hhl}}j}}}}{{{f{d}}l}{{Bd{BfBf}}}}{{{f{d}}hh}l}02{{{f{d}}}{{Af{{Bd{lA`}}}}}}{{{f{d}}hh}{{An{j}}}}0{{{f{d}}h}{{f{{Af{Ad}}}}}}{{{f{d}}}{{An{Ah}}}}{{{f{bd}}h}Bh}0{{{f{bd}}Ad}n}0{{{f{bd}}lllBh}n}0;;{{{f{bd}}l{Af{l}}}n}0{{{f{bd}}lBh}n}0=={{{f{bd}}l{Af{Bh}}}n}011{{{f{bd}}lBhBh}n}055{{{f{bd}}A`}n}06666{{{f{bd}}l}n}00000{{{f{bd}}lBj}n}0{{{f{bd}}Ad}Ab}0{{{f{bd}}}n}000{{{f{bd}}{Af{l}}}n}000{{{f{bd}}h}n}222{{{f{bd}}{Aj{{Bd{hhl}}j}}}n}{{{f{bd}}l{Bd{BfBf}}}n}1{{{f{bd}}{Af{{Bd{lA`}}}}}n}{{{f{bd}}h{Af{Ad}}}n}{{{f{bd}}Ah}n}{{{f{bd}}Ad}n}0","D":"Ln","p":[[0,"mut"],[10,"HostNode",0,102],[1,"reference",null,null,1],[1,"u64"],[5,"Fragment",103],[8,"NodeId",104],[1,"unit"],[6,"SerializableMessage",105],[1,"bool"],[5,"Packet",103],[5,"Vec",106],[5,"Config",107],[5,"HashMap",108],[5,"SourceRoutingHeader",104],[6,"Option",109,null,1],[1,"u8"],[1,"slice"],[1,"tuple",null,null,1],[1,"i32"],[5,"String",110],[6,"ServerType",105]],"r":[[0,102]],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA=","P":[]}],["main",{"t":"H","n":["main"],"q":[[0,"main"],[1,"core::error"],[2,"alloc::boxed"],[3,"core::result"]],"i":"`","f":"{{}{{h{b{f{d}}}}}}","D":"`","p":[[1,"unit"],[10,"Error",1],[5,"Box",2,null,1],[6,"Result",3,null,1]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAEAEAAAAAAAAQA=","P":[]}],["network_initializer",{"t":"ECFNNNNNNNNNNNNNNN","n":["NetworkInitializer","network_initializer","NetworkInitializer","borrow","borrow_mut","deref","deref_mut","drop","from","init","initialize","into","new","start","try_from","try_into","type_id","vzip"],"q":[[0,"network_initializer"],[2,"network_initializer::network_initializer"],[18,"wg_config::config"],[19,"simulation_controller::simulation_controller"],[20,"core::error"],[21,"alloc::boxed"],[22,"core::result"],[23,"core::any"]],"i":"```j00000000000000","f":"```{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{f{{b{c}}}{}}{f{{b{dc}}}{}}{fh}{cc{}}{{}f}{{{b{dj}}l}{{Ad{n{Ab{A`}}}}}}{{}c{}}{{}j}{{{b{dj}}}{{Ad{h{Ab{A`}}}}}}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{bAf}{{}c{}}","D":"A`","p":[[1,"reference",null,null,1],[0,"mut"],[1,"usize"],[1,"unit"],[5,"NetworkInitializer",2],[5,"Config",18],[5,"SimulationController",19],[10,"Error",20],[5,"Box",21,null,1],[6,"Result",22,null,1],[5,"TypeId",23]],"r":[[0,2]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAoABAABAAAABAAEAAoAAAAPAAMA","P":[[3,"T"],[7,""],[8,"T"],[9,""],[11,"U"],[12,""],[14,"U,T"],[15,"U"],[16,""],[17,"V"]]}],["network_node",{"t":"PPPPPPGPPPGPPPPPPPPPPPKPPPPPPGPGGPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNEENNNNNNNNNNNMMMMMMMNNNNMNNNNNEQQCENNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHH","n":["AddSender","","AllServerTypesRequest","Chat","","Client","ClientCommand","ClientListRequest","","ClientListResponse","Command","Communication","Content","Default","Drone","ErrorMessage","FileFound","FileListRequest","","FileListResponse","FileRequest","","NetworkNode","RegisterSuccess","RegisterToCommunicationServer","","RemoveSender","","SendPacket","SerializableMessage","Server","ServerCommand","ServerType","ServerTypeRequest","","ServerTypeResponse","SetServerType","Undefined","add_channel","","borrow","","","","","borrow_mut","","","","","broadcast_packet","","build_ack","","build_flood_response","","build_nack","","clone","","clone_into","","clone_to_uninit","","default","deserialize","","disable_logging","enable_logging","fmt","","forward_packet","","from","","","","","get_crashing_behavior","","get_id","get_packet_receiver","get_packet_send","get_random_generator","get_seen_flood_ids","get_sim_contr_send","handle_command","handle_flood_request","","handle_packet","","handle_routed_packet","into","","","","","is_logging_enabled","log_error","log_status","logging","redirect_logs_to_file","remove_channel","","reverse_packet_routing_direction","","serialize","","to_owned","","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","disable_logging","enable_logging","has_log_file","is_logging_enabled","redirect_logs_to_file","write_to_log"],"q":[[0,"network_node"],[130,"network_node::logging"],[136,"network_node::network_node"],[137,"wg_network::routing"],[138,"wg_packet::packet"],[139,"crossbeam_channel::channel"],[140,"wg_packet::flood"],[141,"alloc::vec"],[142,"core::result"],[143,"serde::de"],[144,"core::fmt"],[145,"std::collections::hash::map"],[146,"rand::rngs::std"],[147,"alloc::string"],[148,"std::collections::hash::set"],[149,"wg_controller::command"],[150,"serde::ser"],[151,"core::any"]],"i":"CjCl11AjCd`311`Ah0212242242`242434`1``42230d0542135421300000000131313313``1300542130000000000000054213`````0000131354213542135421354213``````","f":"``````````````````````````````````````{{{f{bd}}h{l{j}}}n}0{f{{f{c}}}{}}0000{{{f{b}}}{{f{bc}}}{}}0000{{{f{bd}}jh}n}0{{{f{d}}j}j}0{{{f{bd}}j{Ad{{Ab{hA`}}}}}j}0{{{f{d}}jAf}j}0{{{f{Ah}}}Ah}{{{f{Aj}}}Aj}{{f{f{bc}}}n{}}0{{fAl}n}0{{}Aj}{c{{An{Ah}}}B`}{c{{An{Aj}}}B`}``{{{f{Ah}}{f{bBb}}}Bd}{{{f{Aj}}{f{bBb}}}Bd}{{{f{bd}}j}n}0{cc{}}0000{{{f{d}}}Bf}0{{{f{d}}}h}{{{f{d}}}{{f{{Bh{j}}}}}}{{{f{bd}}}{{f{b{Bj{h{l{j}}}}}}}}{{{f{bd}}}{{f{bBl}}}}{{{f{bd}}}{{f{b{C`{Bn}}}}}}{{{f{d}}}{{f{{l{Cb}}}}}}{{{f{bd}}Cd}n}{{{f{bd}}jA`}n}0{{{f{bd}}jA`}Bf}0{{{f{bd}}j}Bf}{{}c{}}0000`````{{{f{bd}}h}n}0{{{f{d}}{f{bj}}}n}0{{{f{Ah}}c}AnCf}{{{f{Aj}}c}AnCf}{fc{}}0{c{{An{e}}}{}{}}0000{{}{{An{c}}}{}}0000{fCh}0000{{}c{}}0000{{}n}0{{}Bf}01{{AlBnBf}n}","D":"Ff","p":[[0,"mut"],[10,"NetworkNode",0,136],[1,"reference",null,null,1],[8,"NodeId",137],[5,"Packet",138],[5,"Sender",139],[1,"unit"],[6,"NodeType",140],[1,"tuple",null,null,1],[5,"Vec",141],[6,"NackType",138],[6,"ServerType",0,136],[6,"SerializableMessage",0,136],[1,"u8"],[6,"Result",142,null,1],[10,"Deserializer",143],[5,"Formatter",144],[8,"Result",144],[1,"bool"],[5,"Receiver",139],[5,"HashMap",145],[5,"StdRng",146],[5,"String",147],[5,"HashSet",148],[6,"DroneEvent",149],[6,"Command",0,136],[10,"Serializer",150],[5,"TypeId",151],[6,"ClientCommand",0],[6,"ServerCommand",0]],"r":[[6,136],[10,136],[22,136],[29,136],[31,136],[32,136],[67,130],[68,130],[97,130],[101,130]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAFUACAABABUAGAAOACkACQA7AAUAQgAFAGIAAABlAAEAawAXAA==","P":[[40,"T"],[50,""],[60,"T"],[62,""],[65,"__D"],[69,""],[73,"T"],[78,""],[92,"U"],[102,""],[106,"__S"],[108,"T"],[110,"U,T"],[115,"U"],[120,""],[125,"V"],[130,""]]}],["server",{"t":"FNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Server","am_i_client","borrow","borrow_mut","from","get_id","get_nack_for_error_in_routing_fragments","get_packet_receiver","get_packet_send","get_pdr_estimation_for_node","get_pending_fragments","get_pending_serializable_messages","get_random_generator","get_seen_flood_ids","get_sim_contr_send","get_single_session_fragments","get_topology","handle_chat","handle_client_list_request","handle_command","handle_file_list_request","handle_file_request","handle_register_to_communication_server","handle_routed_packet","handle_server_type_request","into","new","remove_session_fragments","run","set_nack_for_error_in_routing_fragments","set_pdr_estimation_for_node","set_pending_fragments","set_pending_serializable_messages","set_single_session_fragments","set_topology","try_from","try_into","type_id","vzip"],"q":[[0,"server"],[39,"server::server"],[40,"wg_network::routing"],[41,"wg_packet::packet"],[42,"std::collections::hash::map"],[43,"crossbeam_channel::channel"],[44,"network_node::network_node"],[45,"alloc::vec"],[46,"rand::rngs::std"],[47,"alloc::string"],[48,"std::collections::hash::set"],[49,"wg_controller::command"],[50,"wg_config::config"],[51,"core::option"],[52,"core::result"],[53,"core::any"]],"i":"`b0000000000000000000000000000000000000","f":"`{{{d{b}}}f}{d{{d{c}}}{}}{{{d{h}}}{{d{hc}}}{}}{cc{}}{{{d{b}}}j}{{{d{b}}}{{Ab{{n{llj}}A`}}}}{{{d{b}}}{{d{{Af{Ad}}}}}}{{{d{hb}}}{{d{h{Ab{j{Ah{Ad}}}}}}}}{{{d{b}}j}{{n{AjAj}}}}3{{{d{b}}}{{An{{n{jAl}}}}}}{{{d{hb}}}{{d{hB`}}}}{{{d{hb}}}{{d{h{Bd{Bb}}}}}}{{{d{b}}}{{d{{Ah{Bf}}}}}}{{{d{b}}l}{{d{{An{Ad}}}}}}{{{d{b}}}{{Bj{Bh}}}}{{{d{hb}}jjjBb}Bl}{{{d{hb}}j}Bl}{{{d{hb}}Bn}Bl}1{{{d{hb}}jBb}Bl}2{{{d{hb}}Ad}f}3{{}c{}}{{j{Ah{Bf}}{Af{C`}}{Af{Ad}}{Ab{j{Ah{Ad}}}}}b}{{{d{hb}}l}Bl}{{{d{hb}}}Bl}{{{d{hb}}{Ab{{n{llj}}A`}}}Bl}{{{d{hb}}j{n{AjAj}}}Bl}1{{{d{hb}}{An{{n{jAl}}}}}Bl}{{{d{hb}}l{An{Ad}}}Bl}{{{d{hb}}Bh}Bl}{c{{Cb{e}}}{}{}}{{}{{Cb{c}}}{}}{dCd}{{}c{}}","D":"Dd","p":[[5,"Server",0,39],[1,"reference",null,null,1],[1,"bool"],[0,"mut"],[8,"NodeId",40],[1,"u64"],[1,"tuple",null,null,1],[5,"Fragment",41],[5,"HashMap",42],[5,"Packet",41],[5,"Receiver",43],[5,"Sender",43],[1,"i32"],[6,"SerializableMessage",44],[5,"Vec",45],[5,"StdRng",46],[5,"String",47],[5,"HashSet",48],[6,"DroneEvent",49],[5,"Config",50],[6,"Option",51,null,1],[1,"unit"],[6,"Command",44],[6,"ServerCommand",44],[6,"Result",52,null,1],[5,"TypeId",53]],"r":[[0,39]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAUAAgADAAEAJAADAA==","P":[[2,"T"],[5,""],[25,"U"],[26,""],[35,"U,T"],[36,"U"],[37,""],[38,"V"]]}],["simulation_controller",{"t":"PPPFGPPPNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNHPPPPGNNNNNNNNNNNHNNNNNGPPPNNNNNNNNNNHNNNNNHN","n":["Butterfly","Default","DoubleChain","SimulationController","TopologyType","Tree","TwoStars","TwoTrianglesSquare","all_server_types_request","borrow","","borrow_mut","","chat_command","check_client_id","check_server_id","cli","clone","","clone_into","","clone_to_uninit","","deref","","deref_mut","","drop","","eq","fmt","from","","get_channel_from_client_id","get_channel_from_server_id","get_client_list","get_event_receiver","get_file","get_file_list","get_topology","gui","init","","into","","make_crash","new","parser","register_to_communication_server","return_drone_specific_new_function","server_type_request","set_clients","set_drones","set_packet_channels","set_packet_drop_rate","set_receiver","set_sender","set_server_type","set_servers","spawn_drone","start","start_interactive","to_owned","","try_from","","try_into","","type_id","","vzip","","run_cli","AddClient","AddDrone","AddServer","RemoveNode","TopologyUpdate","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","init","into","run_gui","to_owned","try_from","try_into","type_id","vzip","ConfigError","FileRead","TomlParse","Validation","borrow","borrow_mut","deref","deref_mut","drop","fmt","","from","init","into","parse","to_smolstr","to_string","try_from","try_into","type_id","validate_config","vzip"],"q":[[0,"simulation_controller"],[72,"simulation_controller::cli"],[73,"simulation_controller::gui"],[95,"simulation_controller::parser"],[117,"simulation_controller::simulation_controller"],[118,"wg_network::routing"],[119,"alloc::string"],[120,"core::fmt"],[121,"network_node::network_node"],[122,"crossbeam_channel::channel"],[123,"core::option"],[124,"wg_controller::command"],[125,"wg_config::config"],[126,"core::result"],[127,"wg_packet::packet"],[128,"std::collections::hash::map"],[129,"wg_drone::drone"],[130,"alloc::boxed"],[131,"alloc::vec"],[132,"core::any"],[133,"alloc::sync"],[134,"smol_str"]],"i":"A`00``000d1010000`10101010101011100000000`101000`000000000000001010101010`Db000`00000000000`00000`Df000000000000`00000`0","f":"````````{{{f{bd}}h}j}{f{{f{c}}}{}}0{{{f{b}}}{{f{bc}}}{}}0{{{f{bd}}hhhl}j}{{{f{d}}h}n}0`{{{f{A`}}}A`}{{{f{d}}}d}{{f{f{bc}}}j{}}0{{fAb}j}0{Ad{{f{c}}}{}}0{Ad{{f{bc}}}{}}0{Adj}0{{{f{A`}}{f{A`}}}n}{{{f{A`}}{f{bAf}}}Ah}{cc{}}0{{{f{d}}h}{{An{{f{{Al{Aj}}}}}}}}{{{f{d}}h}{{An{{f{{Al{B`}}}}}}}}{{{f{bd}}hh}j}{{{f{d}}}{{An{{f{{Bd{Bb}}}}}}}}{{{f{bd}}hhl}j}2{{{f{d}}}{{f{Bf}}}}`{{}Ad}0{{}c{}}0{{{f{bd}}h}{{Bh{jl}}}}{{BfA`}d}`7{{Adh}{{Ch{h{Al{Bb}}{Bd{Bj}}{Bd{Bl}}{Bn{h{Al{Bl}}}}C`}{{Cb{{Cf{Cd}}}}}}}}8{{{f{bd}}{Bn{h{Al{Aj}}}}}j}{{{f{bd}}{Bn{h{Al{Bj}}}}}j}{{{f{bd}}{Bn{h{Cj{{Al{Bl}}{Bd{Bl}}}}}}}j}{{{f{bd}}hC`}j}{{{f{bd}}{Bd{Bb}}}j}{{{f{bd}}{Al{Bb}}}j}{{{f{bd}}hCl}j}{{{f{bd}}{Bn{h{Al{B`}}}}}j}{{{f{bd}}{Cn{h}}C`}{{Bh{jl}}}}{{{f{bd}}}j}0{fc{}}0{c{{Bh{e}}}{}{}}0{{}{{Bh{c}}}{}}0{fD`}0{{}c{}}05`````{f{{f{c}}}{}}{{{f{b}}}{{f{bc}}}{}}{{{f{Db}}}Db}{{f{f{bc}}}j{}}{{fAb}j}{Ad{{f{c}}}{}}{Ad{{f{bc}}}{}}{Adj}{cc{}}{{}Ad}{{}c{}}{{{Dd{Bf}}{Dd{{An{{Bd{Bb}}}}}}{Bd{Db}}A`}j}{fc{}}{c{{Bh{e}}}{}{}}{{}{{Bh{c}}}{}}{fD`}{{}c{}}````{f{{f{c}}}{}}{{{f{b}}}{{f{bc}}}{}}=<;{{{f{Df}}{f{bAf}}}Ah}0;:9{{{f{Dh}}}{{Bh{BfDf}}}}{fDj}{fl}987{{{f{Bf}}}{{Bh{jDf}}}}7","D":"Ej","p":[[0,"mut"],[5,"SimulationController",0,117],[1,"reference",null,null,1],[8,"NodeId",118],[1,"unit"],[5,"String",119],[1,"bool"],[6,"TopologyType",0,117],[1,"u8"],[1,"usize"],[5,"Formatter",120],[8,"Result",120],[6,"ClientCommand",121],[5,"Sender",122],[6,"Option",123,null,1],[6,"ServerCommand",121],[6,"DroneEvent",124],[5,"Receiver",122],[5,"Config",125],[6,"Result",126,null,1],[6,"DroneCommand",124],[5,"Packet",127],[5,"HashMap",128],[1,"f32"],[17,"Output"],[10,"Drone",129],[5,"Box",130,null,1],[1,"fn"],[1,"tuple",null,null,1],[6,"ServerType",121],[5,"Vec",131],[5,"TypeId",132],[6,"TopologyUpdate",73],[5,"Arc",133,null,1],[6,"ConfigError",95],[1,"str"],[5,"SmolStr",134]],"r":[[3,117],[4,117]],"b":[[104,"impl-Display-for-ConfigError"],[105,"impl-Debug-for-ConfigError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEgADQABAAIABgACAAoAAwASAA0AKQACAD8ACQBKAAwAWAAAAFsABABhAAkAbAAAAG8ABAB1AAAA","P":[[9,"T"],[13,""],[19,"T"],[21,""],[23,"T"],[27,""],[31,"T"],[33,""],[43,"U"],[45,""],[62,"T"],[64,"U,T"],[66,"U"],[68,""],[70,"V"],[72,""],[78,"T"],[80,""],[81,"T"],[82,""],[83,"T"],[85,""],[86,"T"],[87,""],[88,"U"],[89,""],[90,"T"],[91,"U,T"],[92,"U"],[93,""],[94,"V"],[99,"T"],[103,""],[106,"T"],[107,""],[108,"U"],[109,""],[112,"U,T"],[113,"U"],[114,""],[116,"V"]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[2824,1643,3559,294,1107,3840,2586,4618]}